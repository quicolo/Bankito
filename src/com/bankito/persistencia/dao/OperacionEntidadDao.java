/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.bankito.persistencia.dao;

import com.bankito.persistencia.dto.*;
import com.bankito.persistencia.exceptions.*;

public interface OperacionEntidadDao
{
	/** 
	 * Inserts a new row in the operacion table.
	 */
	public OperacionEntidadPk insert(OperacionEntidad dto) throws OperacionEntidadDaoException;

	/** 
	 * Updates a single row in the operacion table.
	 */
	public void update(OperacionEntidadPk pk, OperacionEntidad dto) throws OperacionEntidadDaoException;

	/** 
	 * Deletes a single row in the operacion table.
	 */
	public void delete(OperacionEntidadPk pk) throws OperacionEntidadDaoException;

	/** 
	 * Returns the rows from the operacion table that matches the specified primary-key value.
	 */
	public OperacionEntidad findByPrimaryKey(OperacionEntidadPk pk) throws OperacionEntidadDaoException;

	/** 
	 * Returns all rows from the operacion table that match the criteria 'id_operacion = :idOperacion'.
	 */
	public OperacionEntidad findByPrimaryKey(int idOperacion) throws OperacionEntidadDaoException;

	/** 
	 * Returns all rows from the operacion table that match the criteria ''.
	 */
	public OperacionEntidad[] findAll() throws OperacionEntidadDaoException;

	/** 
	 * Returns all rows from the operacion table that match the criteria 'id_operacion = :idOperacion'.
	 */
	public OperacionEntidad[] findWhereIdOperacionEquals(int idOperacion) throws OperacionEntidadDaoException;

	/** 
	 * Returns all rows from the operacion table that match the criteria 'nombre_corto = :nombreCorto'.
	 */
	public OperacionEntidad[] findWhereNombreCortoEquals(String nombreCorto) throws OperacionEntidadDaoException;

	/** 
	 * Returns all rows from the operacion table that match the criteria 'nombre = :nombre'.
	 */
	public OperacionEntidad[] findWhereNombreEquals(String nombre) throws OperacionEntidadDaoException;

	/** 
	 * Returns all rows from the operacion table that match the criteria 'descripcion = :descripcion'.
	 */
	public OperacionEntidad[] findWhereDescripcionEquals(String descripcion) throws OperacionEntidadDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the operacion table that match the specified arbitrary SQL statement
	 */
	public OperacionEntidad[] findByDynamicSelect(String sql, Object[] sqlParams) throws OperacionEntidadDaoException;

	/** 
	 * Returns all rows from the operacion table that match the specified arbitrary SQL statement
	 */
	public OperacionEntidad[] findByDynamicWhere(String sql, Object[] sqlParams) throws OperacionEntidadDaoException;

}
