/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.bankito.persistencia.dao;

import com.bankito.persistencia.dto.*;
import com.bankito.persistencia.exceptions.*;

public interface PerfilUsuarioEntidadDao
{
	/** 
	 * Inserts a new row in the perfil_usuario table.
	 */
	public PerfilUsuarioEntidadPk insert(PerfilUsuarioEntidad dto) throws PerfilUsuarioEntidadDaoException;

	/** 
	 * Updates a single row in the perfil_usuario table.
	 */
	public void update(PerfilUsuarioEntidadPk pk, PerfilUsuarioEntidad dto) throws PerfilUsuarioEntidadDaoException;

	/** 
	 * Deletes a single row in the perfil_usuario table.
	 */
	public void delete(PerfilUsuarioEntidadPk pk) throws PerfilUsuarioEntidadDaoException;

	/** 
	 * Returns the rows from the perfil_usuario table that matches the specified primary-key value.
	 */
	public PerfilUsuarioEntidad findByPrimaryKey(PerfilUsuarioEntidadPk pk) throws PerfilUsuarioEntidadDaoException;

	/** 
	 * Returns all rows from the perfil_usuario table that match the criteria 'id_perfil_usuario = :idPerfilUsuario'.
	 */
	public PerfilUsuarioEntidad findByPrimaryKey(int idPerfilUsuario) throws PerfilUsuarioEntidadDaoException;

	/** 
	 * Returns all rows from the perfil_usuario table that match the criteria ''.
	 */
	public PerfilUsuarioEntidad[] findAll() throws PerfilUsuarioEntidadDaoException;

	/** 
	 * Returns all rows from the perfil_usuario table that match the criteria 'id_perfil_usuario = :idPerfilUsuario'.
	 */
	public PerfilUsuarioEntidad[] findWhereIdPerfilUsuarioEquals(int idPerfilUsuario) throws PerfilUsuarioEntidadDaoException;

	/** 
	 * Returns all rows from the perfil_usuario table that match the criteria 'nombre = :nombre'.
	 */
	public PerfilUsuarioEntidad[] findWhereNombreEquals(String nombre) throws PerfilUsuarioEntidadDaoException;

	/** 
	 * Returns all rows from the perfil_usuario table that match the criteria 'descripcion = :descripcion'.
	 */
	public PerfilUsuarioEntidad[] findWhereDescripcionEquals(String descripcion) throws PerfilUsuarioEntidadDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the perfil_usuario table that match the specified arbitrary SQL statement
	 */
	public PerfilUsuarioEntidad[] findByDynamicSelect(String sql, Object[] sqlParams) throws PerfilUsuarioEntidadDaoException;

	/** 
	 * Returns all rows from the perfil_usuario table that match the specified arbitrary SQL statement
	 */
	public PerfilUsuarioEntidad[] findByDynamicWhere(String sql, Object[] sqlParams) throws PerfilUsuarioEntidadDaoException;

}
